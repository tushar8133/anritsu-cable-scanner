{"version":3,"sources":["Header.js","Footer.js","service.js","components/Connection.js","components/Command.js","components/Pim.js","components/AutotestTable.js","components/Autotest.js","App.js","serviceWorker.js","index.js"],"names":["Header","id","src","alt","onClick","this","divert","activeClassName","exact","to","window","location","href","React","Component","Footer","socket","io","connectMachine","cmd","document","getElementById","style","display","socketObj","address","localStorage","getItem","command","console","log","emit","Promise","resolve","reject","on","resp","JSON","parse","Connection","props","state","addresses","getDeviceList","length","map","value","index","key","type","name","onInput","_","radioHandler","htmlFor","then","data","setState","selectDefaultOption","val","setItem","checked","Command","sendCommand","className","placeholder","rows","cols","setResponse","String","Pim","savePower","saveDuration","pimvstimeHandler","changingtopimanalyzerHandler","setpowerandduration","sweptpimHandler","dtpHandler","evt","target","power","local","e","duration","AutotestTable","tableData","finalData","checkDuplicate","addon","scrollDiv","querySelector","scrollTop","scrollHeight","align","border","row","qrcode","dBm","dBc","timestamp","deleteRow","exportData","duplicateState","splice","oldData","newData","unique","filter","push","dt","Date","getFullYear","toString","padStart","getMonth","getDate","getHours","getMinutes","getSeconds","person","prompt","alert","table","obj","Object","assign","xlsxModule","ws","XLSX","utils","json_to_sheet","A","B","formatDate","header","skipHeader","sheet_add_json","origin","wb","book_new","book_append_sheet","writeFile","Autotest","disabled","waitForQRCode","bind","autoComplete","clearTimeout","debounceTimer","setTimeout","sendCommandToDevice","elem","formatFinalData","focus","peakData","peakDataArr","formatPeakData","currentData","prevState","arr","split","trim","App","path","component","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ea3d0eba.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink as Link } from \"react-router-dom\";\r\n\r\nclass Header extends React.Component {\r\n\r\n    render() {\r\n      return (\r\n        <header id=\"header-page\">\r\n\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td><img src=\"logo.png\" alt=\"Anritsu Logo\" /></td>\r\n                <td><h2>Anritsu PIM Analyzer Automation GUI</h2>\r\n                  <nav>\r\n                    <li onClick={this.divert}><Link activeClassName=\"navLink\" exact to=\"/\"><button>Connection</button></Link></li>\r\n                    <li><Link activeClassName=\"navLink\" to=\"/command\"><button>SCPI Commands</button></Link></li>\r\n                    <li><Link activeClassName=\"navLink\" to=\"/pim\"><button>PIM Mode</button></Link></li>\r\n                    <li><Link activeClassName=\"navLink\" to=\"/autotest\"><button>Auto Test</button></Link></li>\r\n                  </nav></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <hr />\r\n        </header>\r\n      )\r\n    }\r\n\r\n    divert(){\r\n      window.location.href = (\"/\");\r\n    }\r\n\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n      <footer></footer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import io from 'socket.io-client';\r\n\r\nvar socket = io();\r\n\r\nfunction connectMachine(cmd) {\r\n\tdocument.getElementById('spinner').style.display = 'block';\r\n\tvar socketObj = {\r\n\t\taddress: localStorage.getItem('address'),\r\n\t\tcommand: cmd\r\n\t};\r\n\r\n\tconsole.log(socketObj)\r\n\r\n\tsocket.emit('comm', socketObj);\r\n\t\r\n    return new Promise((resolve, reject) => {\r\n        socket.on('comm', function(resp) {\r\n            resolve(JSON.parse(resp));\r\n\t\t\tdocument.getElementById('spinner').style.display = 'none';\r\n        });\r\n    });\r\n}\r\n\r\nexport default connectMachine;\r\n","import React from 'react';\r\nimport connectMachine from '../service';\r\n\r\nclass Connection extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            addresses: ['aa','bb']\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDeviceList();\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.addresses.length === 0) {\r\n            return <h3>Loading...</h3>\r\n        } else return (\r\n            <main id='connection-page'>\r\n                {\r\n                    this.state.addresses.map((value, index) => (\r\n                        <div key={value}><input type=\"radio\" id={'rad' + (index + 1)} name='addrs' onInput={_ => this.radioHandler(value)} /><label htmlFor={'rad' + (index + 1)}>{value}</label></div>\r\n                    ))\r\n                }\r\n            </main>\r\n        )\r\n    }\r\n\r\n    getDeviceList() {\r\n        connectMachine('GET_DEVICE_LIST').then( data => {\r\n            console.log(\"data here..\", data)\r\n            this.setState(state => ({ addresses: data }));\r\n            this.selectDefaultOption(data[0]);\r\n        });\r\n    }\r\n\r\n    radioHandler(val) {\r\n        localStorage.setItem(\"address\", val);\r\n    }\r\n\r\n    selectDefaultOption(val) {\r\n        document.getElementById('rad1').checked = true;\r\n        this.radioHandler(val);\r\n    }\r\n}\r\n\r\nexport default Connection;\r\n","import React from 'react';\r\nimport connectMachine from '../service';\r\n\r\nclass Command extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <main id='command-page'>\r\n\r\n                <button onClick={_ => this.sendCommand('*IDN?')}>*IDN?</button>\r\n                <button onClick={_ => this.sendCommand('*ABC?')}>*ABC?</button>\r\n                <button onClick={_ => this.sendCommand('*DEF?')}>*DEF?</button>\r\n                <button onClick={_ => this.sendCommand('*XYZ?')}>*XYZ?</button>\r\n                <span className=\"spacer\" />\r\n                <input type=\"text\" id=\"custom-cmd\" placeholder=\"SCPI command\" />\r\n                <button onClick={_ => this.sendCommand(document.getElementById('custom-cmd').value)}>Send</button>\r\n                <span className=\"spacer\" />\r\n                <textarea id=\"textarea\" rows=\"10\" cols=\"60\"></textarea>\r\n            </main>\r\n        )\r\n    }\r\n\r\n    sendCommand(cmd) {\r\n        connectMachine(cmd).then( data => {\r\n            this.setResponse(data);\r\n        });\r\n    }\r\n\r\n    setResponse(resp) {\r\n        document.getElementById('textarea').value = String(resp);\r\n    }\r\n}\r\n\r\nexport default Command;\r\n","import React from 'react';\r\nimport connectMachine from '../service';\r\n\r\nclass Pim extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.savePower();\r\n        this.saveDuration();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <main id='pim-page'>\r\n            \t<label>Output Power Level (dBm): <input type=\"number\" id=\"outputPowerLevel\" onInput={this.savePower} /></label>\r\n\t            <label>Test Duration (sec): <input type=\"number\" id=\"testDuration\" onInput={this.saveDuration} /></label>\r\n\t            <br />\r\n                <button onClick={ _ => {this.pimvstimeHandler()} }>PIM Vs Time</button>\r\n                <button onClick={ _ => {this.changingtopimanalyzerHandler()} }>Changing to PIM Analyzer</button>\r\n                <button onClick={ _ => {this.setpowerandduration()} }>Set Power & Duration</button>\r\n                <button onClick={ _ => {this.sweptpimHandler()} }>Swept PIM</button>\r\n                <button onClick={ _ => {this.dtpHandler()} }>DTP</button>\r\n                <span className=\"spacer\" />\r\n                <textarea id=\"textarea\" rows=\"10\" cols=\"60\"></textarea>\r\n            </main>\r\n        )\r\n    }\r\n\r\n    pimvstimeHandler(){\r\n    \tconnectMachine('SENSe:PIManalyzer:MODe PIM')\r\n    \t.then( data => {\r\n    \t\tthis.setResponse(data);\r\n    \t});\r\n    }\r\n\r\n    setpowerandduration() {\r\n        connectMachine(':PIManalyzer:OUTPut:POWer ' + localStorage.getItem('power'))\r\n        .then( data => {\r\n            return connectMachine(':PIManalyzer:TEST:DURation ' + localStorage.getItem('duration'));\r\n        })\r\n        .then( data => {\r\n            this.setResponse(data);\r\n        });\r\n    }\r\n\r\n    sweptpimHandler(){\r\n    \tconnectMachine(':PIManalyzer:MODe PIMSwp')\r\n    \t.then( data => {\r\n    \t\treturn connectMachine(':INSTrument:NSELect 46');\r\n    \t})\r\n    \t.then( data => {\r\n    \t\tthis.setResponse(data);\r\n    \t});\r\n    }\r\n\r\n    changingtopimanalyzerHandler() {\r\n        connectMachine(':INSTrument:NSELect 46')\r\n        .then( data => {\r\n            this.setResponse(data);\r\n        });\r\n    }\r\n\r\n    dtpHandler(){\r\n    \tconnectMachine(':PIManalyzer:MODe DTP')\r\n    \t.then( data => {\r\n    \t\tthis.setResponse(data);\r\n    \t});\r\n    }\r\n\r\n    setResponse(resp) {\r\n        document.getElementById('textarea').value = String(resp);\r\n    }\r\n\r\n    savePower(evt) {\r\n\t\tif(evt) {\r\n\t\t\tif(evt.target.value < 20) evt.target.value = 20;\r\n\t\t\tif(evt.target.value > 46) evt.target.value = 46;\r\n\t\t\tlocalStorage.setItem('power', evt.target.value);\r\n\t\t} else {\r\n\t\t\tvar power = 43;\r\n\t    \ttry {\r\n\t        \tvar local = JSON.parse(localStorage.getItem('power'));\r\n\t    \t\tif(local) power = local;\r\n\t    \t} catch (e) {\r\n\t    \t\tconsole.log(e);\r\n\t    \t} finally {\r\n\t    \t\tdocument.getElementById('outputPowerLevel').value = power;\r\n\t    \t\tlocalStorage.setItem('power', power);\r\n\t    \t}\r\n\t\t}\r\n    }\r\n\r\n\tsaveDuration(evt) {\r\n\t\tif(evt) {\r\n\t        if(evt.target.value < 1) evt.target.value = 1;\r\n\t        if(evt.target.value > 600) evt.target.value = 600;\r\n\t        localStorage.setItem('duration', evt.target.value);\r\n\t\t} else {\r\n\t\t\tvar duration = 30;\r\n\t    \ttry {\r\n\t        \tvar local = JSON.parse(localStorage.getItem('duration'));\r\n\t    \t\tif(local) duration = local;\r\n\t    \t} catch (e) {\r\n\t    \t\tconsole.log(e);\r\n\t    \t} finally {\r\n\t    \t\tdocument.getElementById('testDuration').value = duration;\r\n\t    \t\tlocalStorage.setItem('duration', duration);\r\n\t    \t}\r\n\t\t}\r\n\t}\r\n    \r\n}\r\n\r\nexport default Pim;\r\n","import React from 'react';\r\nimport XLSX from 'xlsx';\r\n\r\nclass AutotestTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tableData: [{ \"qrcode\": \"a\", \"power\": \"41\", \"duration\": \"33\", \"dBm\": \"u\", \"dBc\": \"n\", \"timestamp\": \"13:02:29\" }, { \"qrcode\": \"b\", \"power\": \"41\", \"duration\": \"33\", \"dBm\": \"u\", \"dBc\": \"n\", \"timestamp\": \"13:02:31\" }, { \"qrcode\": \"c\", \"power\": \"41\", \"duration\": \"33\", \"dBm\": \"u\", \"dBc\": \"n\", \"timestamp\": \"13:02:33\" }, { \"qrcode\": \"d\", \"power\": \"41\", \"duration\": \"33\", \"dBm\": \"u\", \"dBc\": \"n\", \"timestamp\": \"13:02:34\" }, { \"qrcode\": \"e\", \"power\": \"41\", \"duration\": \"33\", \"dBm\": \"u\", \"dBc\": \"n\", \"timestamp\": \"13:02:36\" }, { \"qrcode\": \"f\", \"power\": \"41\", \"duration\": \"33\", \"dBm\": \"u\", \"dBc\": \"n\", \"timestamp\": \"13:02:37\" }, { \"qrcode\": \"g\", \"power\": \"41\", \"duration\": \"33\", \"dBm\": \"u\", \"dBc\": \"n\", \"timestamp\": \"13:02:39\" }, { \"qrcode\": \"h\", \"power\": \"41\", \"duration\": \"33\", \"dBm\": \"u\", \"dBc\": \"n\", \"timestamp\": \"13:02:44\" }, { \"qrcode\": \"i\", \"power\": \"41\", \"duration\": \"33\", \"dBm\": \"u\", \"dBc\": \"n\", \"timestamp\": \"13:02:46\" }, { \"qrcode\": \"j\", \"power\": \"41\", \"duration\": \"33\", \"dBm\": \"u\", \"dBc\": \"n\", \"timestamp\": \"13:02:48\" }, { \"qrcode\": \"k\", \"power\": \"41\", \"duration\": \"33\", \"dBm\": \"u\", \"dBc\": \"n\", \"timestamp\": \"13:02:51\" }, { \"qrcode\": \"l\", \"power\": \"41\", \"duration\": \"33\", \"dBm\": \"u\", \"dBc\": \"n\", \"timestamp\": \"13:02:52\" }, { \"qrcode\": \"m\", \"power\": \"41\", \"duration\": \"33\", \"dBm\": \"u\", \"dBc\": \"n\", \"timestamp\": \"13:02:54\" }]\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        var finalData = this.checkDuplicate(this.state.tableData, props.addon);\r\n        this.setState({ tableData: finalData });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        var scrollDiv = document.querySelector('#autotesttable > div');\r\n        scrollDiv.scrollTop = scrollDiv.scrollHeight;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <main id=\"autotesttable\" align=\"center\">\r\n                <div>\r\n                    <table id=\"data-table\" border=\"1\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Serial No.</th>\r\n                                <th>Power</th>\r\n                                <th>Duration</th>\r\n                                <th>dBm</th>\r\n                                <th>dBc</th>\r\n                                <th>Timestamp</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.tableData.map((row, index) => <tr key={row.qrcode}><td>{index + 1}</td><td>{row.qrcode}</td><td>{row.power}</td><td>{row.duration}</td><td>{row.dBm}</td><td>{row.dBc}</td><td>{row.timestamp}</td><td><button onClick={_ => this.deleteRow(index)}>&#10005;</button></td></tr>)}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <button onClick={_ => this.exportData()}>Save Excel</button>\r\n            </main>);\r\n    }\r\n\r\n    deleteRow(index) {\r\n        console.log(index);\r\n        var duplicateState = [...this.state.tableData];\r\n        duplicateState.splice(index, 1);\r\n        this.setState({\r\n            tableData: duplicateState\r\n        })\r\n    }\r\n\r\n    checkDuplicate(oldData, newData) {\r\n        var unique = oldData.filter((val, index) => {\r\n            return (val.qrcode !== newData.qrcode);\r\n        });\r\n        unique.push(newData)\r\n        return unique;\r\n    }\r\n\r\n    formatDate(type) {\r\n        var dt = new Date();\r\n        if(type === 'print') return (`${dt.getFullYear().toString().padStart(4, '0')}-${(dt.getMonth() + 1).toString().padStart(2, '0')}-${dt.getDate().toString().padStart(2, '0')} ${dt.getHours().toString().padStart(2, '0')}:${dt.getMinutes().toString().padStart(2, '0')}:${dt.getSeconds().toString().padStart(2, '0')}`);\r\n        if(type === 'save') return (`${dt.getFullYear().toString().padStart(4, '0')}-${(dt.getMonth() + 1).toString().padStart(2, '0')}-${dt.getDate().toString().padStart(2, '0')}  (${dt.getHours().toString().padStart(2, '0')}${dt.getMinutes().toString().padStart(2, '0')})`);\r\n    }\r\n\r\n    exportData() {\r\n        var person = prompt('Please enter OPERATOR NAME');\r\n        if (!person) {\r\n            alert('OPERATOR NAME is required!');\r\n            return false;\r\n        }\r\n        console.table(this.state.tableData)\r\n        var data = [...this.state.tableData];\r\n        var newData = data.map((obj, index) => {\r\n            return Object.assign({ index: String(index + 1) }, obj)\r\n        })\r\n        // console.table(newData);\r\n        this.xlsxModule(person, newData);\r\n    }\r\n\r\n    xlsxModule(person, data) {\r\n        var ws = XLSX.utils.json_to_sheet([{ A: 'Operator Name', B: person }, { A: 'Date', B: this.formatDate('print') }], { header: ['A', 'B'], skipHeader: true });\r\n        XLSX.utils.sheet_add_json(ws, data, { skipHeader: false, origin: 'A4' });\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws);\r\n        XLSX.writeFile(wb, `Anritsu Test -- ${this.formatDate('save')}.xlsx`);\r\n    }\r\n}\r\n\r\nexport default AutotestTable;\r\n","import React from 'react';\r\nimport AutotestTable from './AutotestTable';\r\nimport connectMachine from '../service';\r\n\r\nclass Autotest extends React.Component {\r\n    debounceTimer;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newData: {}\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (<main id=\"autotest\">\r\n            <label>Output Power Level (dBm): <input type=\"number\" id=\"outputPowerLevel\" onInput={this.savePower} disabled={true}/></label>\r\n            <label>Test Duration (sec): <input type=\"number\" id=\"testDuration\" onInput={this.saveDuration}  disabled={true}/></label>\r\n            <br />\r\n            <input type=\"text\" id=\"scanner\" placeholder=\"Place scanner here\" onInput={this.waitForQRCode.bind(this)} className=\"backgroundAnimated\" autoComplete=\"off\" />\r\n            <AutotestTable addon={this.state.newData} />\r\n            <br />\r\n        </main>);\r\n    }\r\n\r\n    waitForQRCode() {\r\n        clearTimeout(this.debounceTimer);\r\n        this.debounceTimer = setTimeout( _ => {\r\n            this.sendCommandToDevice();\r\n        }, 50);\r\n    }\r\n\r\n    sendCommandToDevice() {\r\n        var elem = document.getElementById('scanner');\r\n        var qrcode = elem.value;\r\n        if(!qrcode) return;\r\n\r\n        var power = document.getElementById('outputPowerLevel').value;\r\n        var duration = document.getElementById('testDuration').value;\r\n\r\n        connectMachine('INITiate:PIManalyzer:MEASure ON')\r\n        .then( data => {\r\n            return connectMachine(':PIManalyzer:MEASure:VALue?');\r\n        })\r\n        .then( data => {\r\n            console.log(data)\r\n            this.formatFinalData(qrcode, data, power, duration);\r\n            elem.value = '';\r\n            elem.focus();\r\n        });\r\n    }\r\n\r\n    formatFinalData(qrcode, peakData, power, duration) {\r\n        // TODO: check this String method requirement.\r\n        var peakDataArr = this.formatPeakData(String(peakData));\r\n        var dBc = peakDataArr[0];\r\n        var dBm = peakDataArr[1];\r\n        var timestamp = this.formatDate();\r\n\r\n        var currentData = { qrcode, power, duration, dBc, dBm, timestamp };\r\n\r\n        this.setState(prevState => ({\r\n            newData: currentData\r\n        }));\r\n    }\r\n\r\n    formatPeakData(data) {\r\n        var arr = data.split(',');\r\n        arr[0] = String(arr[0]).trim() + ' dBc';\r\n        arr[1] = String(arr[1]).trim() + ' dBm';\r\n        console.log(\">> >> >>\",arr)\r\n        return arr;\r\n    }\r\n\r\n    formatDate() {\r\n        var dt = new Date();\r\n        return (`${dt.getHours().toString().padStart(2, '0')}:${dt.getMinutes().toString().padStart(2, '0')}:${dt.getSeconds().toString().padStart(2, '0')}`);\r\n    }\r\n\r\n    savePower(evt) {\r\n        if(evt) {\r\n            if(evt.target.value < 20) evt.target.value = 20;\r\n            if(evt.target.value > 46) evt.target.value = 46;\r\n            localStorage.setItem('power', evt.target.value);\r\n        } else {\r\n            var power = 43;\r\n            try {\r\n                var local = JSON.parse(localStorage.getItem('power'));\r\n                if(local) power = local;\r\n            } catch (e) {\r\n                console.log(e);\r\n            } finally {\r\n                document.getElementById('outputPowerLevel').value = power;\r\n                localStorage.setItem('power', power);\r\n            }\r\n        }\r\n    }\r\n\r\n    saveDuration(evt) {\r\n        if(evt) {\r\n            if(evt.target.value < 1) evt.target.value = 1;\r\n            if(evt.target.value > 600) evt.target.value = 600;\r\n            localStorage.setItem('duration', evt.target.value);\r\n        } else {\r\n            var duration = 30;\r\n            try {\r\n                var local = JSON.parse(localStorage.getItem('duration'));\r\n                if(local) duration = local;\r\n            } catch (e) {\r\n                console.log(e);\r\n            } finally {\r\n                document.getElementById('testDuration').value = duration;\r\n                localStorage.setItem('duration', duration);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // TODO: try to use these methods from PIM class file\r\n        this.savePower();\r\n        this.saveDuration();\r\n    }\r\n\r\n}\r\n\r\nexport default Autotest;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Connection from './components/Connection';\r\nimport Command from './components/Command';\r\nimport Pim from './components/Pim';\r\nimport Autotest from './components/Autotest';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Connection} />\r\n        <Route exact path=\"/command\" component={Command} />\r\n        <Route path=\"/pim\" component={Pim} />\r\n        <Route path=\"/autotest\" component={Autotest} />\r\n      </Switch>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}