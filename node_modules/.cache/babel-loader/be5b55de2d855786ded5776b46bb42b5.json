{"ast":null,"code":"import io from 'socket.io-client';\nvar socket = io();\n\nfunction connectMachine(cmd) {\n  document.getElementById('spinner').style.display = 'block';\n  var socketObj = {\n    address: localStorage.getItem('address'),\n    command: cmd\n  };\n  console.log(socketObj);\n  socket.emit('comm', socketObj);\n  return new Promise((resolve, reject) => {\n    socket.on('comm', function (resp) {\n      resolve(JSON.parse(resp));\n      document.getElementById('spinner').style.display = 'none';\n    });\n  });\n}\n\nexport default connectMachine;","map":{"version":3,"sources":["C:/Users/amnaonoip/Desktop/anritsu-cable-scanner/src/service.js"],"names":["io","socket","connectMachine","cmd","document","getElementById","style","display","socketObj","address","localStorage","getItem","command","console","log","emit","Promise","resolve","reject","on","resp","JSON","parse"],"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAM,GAAGD,EAAE,EAAf;;AAEA,SAASE,cAAT,CAAwBC,GAAxB,EAA6B;AAC5BC,EAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,CAAyCC,OAAzC,GAAmD,OAAnD;AACA,MAAIC,SAAS,GAAG;AACfC,IAAAA,OAAO,EAAEC,YAAY,CAACC,OAAb,CAAqB,SAArB,CADM;AAEfC,IAAAA,OAAO,EAAET;AAFM,GAAhB;AAKAU,EAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AAEAP,EAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAoBP,SAApB;AAEG,SAAO,IAAIQ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCjB,IAAAA,MAAM,CAACkB,EAAP,CAAU,MAAV,EAAkB,UAASC,IAAT,EAAe;AAC7BH,MAAAA,OAAO,CAACI,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAD,CAAP;AACThB,MAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,CAAyCC,OAAzC,GAAmD,MAAnD;AACM,KAHD;AAIH,GALM,CAAP;AAMH;;AAED,eAAeL,cAAf","sourcesContent":["import io from 'socket.io-client';\r\n\r\nvar socket = io();\r\n\r\nfunction connectMachine(cmd) {\r\n\tdocument.getElementById('spinner').style.display = 'block';\r\n\tvar socketObj = {\r\n\t\taddress: localStorage.getItem('address'),\r\n\t\tcommand: cmd\r\n\t};\r\n\r\n\tconsole.log(socketObj)\r\n\r\n\tsocket.emit('comm', socketObj);\r\n\t\r\n    return new Promise((resolve, reject) => {\r\n        socket.on('comm', function(resp) {\r\n            resolve(JSON.parse(resp));\r\n\t\t\tdocument.getElementById('spinner').style.display = 'none';\r\n        });\r\n    });\r\n}\r\n\r\nexport default connectMachine;\r\n"]},"metadata":{},"sourceType":"module"}