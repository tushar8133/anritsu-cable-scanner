{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amnaonoip\\\\Desktop\\\\anritsu-cable-scanner\\\\src\\\\components\\\\Connection.js\";\nimport React from 'react';\nimport connectMachine from '../service';\n\nclass Connection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addresses: ['aa', 'bb']\n    };\n  }\n\n  componentDidMount() {\n    this.getDeviceList();\n  }\n\n  render() {\n    if (this.state.addresses.length === 0) {\n      return React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Loading...\");\n    } else return React.createElement(\"main\", {\n      id: \"connection-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.state.addresses.map((value, index) => React.createElement(\"div\", {\n      key: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      id: 'rad' + (index + 1),\n      name: \"addrs\",\n      onInput: _ => this.radioHandler(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: 'rad' + (index + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, value))));\n  }\n\n  getDeviceList() {\n    connectMachine('GET_DEVICE_LIST').then(data => {\n      console.log(\"data here..\", data);\n      this.setState(state => ({\n        addresses: data\n      }));\n      this.selectDefaultOption(data[0]);\n    });\n  }\n\n  radioHandler(val) {\n    localStorage.setItem(\"address\", val);\n  }\n\n  selectDefaultOption(val) {\n    document.getElementById('rad1').checked = true;\n    this.radioHandler(val);\n  }\n\n}\n\nexport default Connection;","map":{"version":3,"sources":["C:/Users/amnaonoip/Desktop/anritsu-cable-scanner/src/components/Connection.js"],"names":["React","connectMachine","Connection","Component","constructor","props","state","addresses","componentDidMount","getDeviceList","render","length","map","value","index","_","radioHandler","then","data","console","log","setState","selectDefaultOption","val","localStorage","setItem","document","getElementById","checked"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,YAA3B;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,CAAC,IAAD,EAAM,IAAN;AADF,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,aAAL;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,QAAI,KAAKJ,KAAL,CAAWC,SAAX,CAAqBI,MAArB,KAAgC,CAApC,EAAuC;AACnC,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KAFD,MAEO,OACH;AAAM,MAAA,EAAE,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKL,KAAL,CAAWC,SAAX,CAAqBK,GAArB,CAAyB,CAACC,KAAD,EAAQC,KAAR,KACrB;AAAK,MAAA,GAAG,EAAED,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiB;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAE,SAASC,KAAK,GAAG,CAAjB,CAAxB;AAA6C,MAAA,IAAI,EAAC,OAAlD;AAA0D,MAAA,OAAO,EAAEC,CAAC,IAAI,KAAKC,YAAL,CAAkBH,KAAlB,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB,EAAqH;AAAO,MAAA,OAAO,EAAE,SAASC,KAAK,GAAG,CAAjB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCD,KAAtC,CAArH,CADJ,CAFR,CADG;AASV;;AAEDJ,EAAAA,aAAa,GAAG;AACZR,IAAAA,cAAc,CAAC,iBAAD,CAAd,CAAkCgB,IAAlC,CAAwCC,IAAI,IAAI;AAC5CC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,IAA3B;AACA,WAAKG,QAAL,CAAcf,KAAK,KAAK;AAAEC,QAAAA,SAAS,EAAEW;AAAb,OAAL,CAAnB;AACA,WAAKI,mBAAL,CAAyBJ,IAAI,CAAC,CAAD,CAA7B;AACH,KAJD;AAKH;;AAEDF,EAAAA,YAAY,CAACO,GAAD,EAAM;AACdC,IAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCF,GAAhC;AACH;;AAEDD,EAAAA,mBAAmB,CAACC,GAAD,EAAM;AACrBG,IAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,OAAhC,GAA0C,IAA1C;AACA,SAAKZ,YAAL,CAAkBO,GAAlB;AACH;;AA1CoC;;AA6CzC,eAAerB,UAAf","sourcesContent":["import React from 'react';\r\nimport connectMachine from '../service';\r\n\r\nclass Connection extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            addresses: ['aa','bb']\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDeviceList();\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.addresses.length === 0) {\r\n            return <h3>Loading...</h3>\r\n        } else return (\r\n            <main id='connection-page'>\r\n                {\r\n                    this.state.addresses.map((value, index) => (\r\n                        <div key={value}><input type=\"radio\" id={'rad' + (index + 1)} name='addrs' onInput={_ => this.radioHandler(value)} /><label htmlFor={'rad' + (index + 1)}>{value}</label></div>\r\n                    ))\r\n                }\r\n            </main>\r\n        )\r\n    }\r\n\r\n    getDeviceList() {\r\n        connectMachine('GET_DEVICE_LIST').then( data => {\r\n            console.log(\"data here..\", data)\r\n            this.setState(state => ({ addresses: data }));\r\n            this.selectDefaultOption(data[0]);\r\n        });\r\n    }\r\n\r\n    radioHandler(val) {\r\n        localStorage.setItem(\"address\", val);\r\n    }\r\n\r\n    selectDefaultOption(val) {\r\n        document.getElementById('rad1').checked = true;\r\n        this.radioHandler(val);\r\n    }\r\n}\r\n\r\nexport default Connection;\r\n"]},"metadata":{},"sourceType":"module"}