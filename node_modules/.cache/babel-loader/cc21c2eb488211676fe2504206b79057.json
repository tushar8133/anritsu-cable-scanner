{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amnaonoip\\\\Desktop\\\\anritsu-cable-scanner\\\\src\\\\components\\\\Autotest.js\";\nimport React from 'react';\nimport AutotestTable from './AutotestTable';\nimport connectMachine from '../service';\n\nclass Autotest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newData: {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"main\", {\n      id: \"autotest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Output Power Level (dBm): \", React.createElement(\"input\", {\n      type: \"number\",\n      id: \"outputPowerLevel\",\n      onInput: this.savePower,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Test Duration (sec): \", React.createElement(\"input\", {\n      type: \"number\",\n      id: \"testDuration\",\n      onInput: this.saveDuration,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"scanner\",\n      placeholder: \"Place scanner here\",\n      onInput: this.waitForQRCode.bind(this),\n      className: \"backgroundAnimated\",\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(AutotestTable, {\n      addon: this.state.newData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  }\n\n  waitForQRCode() {\n    clearTimeout(this.debounceTimer);\n    this.debounceTimer = setTimeout(_ => {\n      this.sendCommandToDevice();\n    }, 500);\n  }\n\n  sendCommandToDevice() {\n    var elem = document.getElementById('scanner');\n    var qrcode = elem.value;\n    if (!qrcode) return;\n    elem.disabled = true;\n    var power = document.getElementById('outputPowerLevel').value;\n    var duration = document.getElementById('testDuration').value;\n    connectMachine('INITiate:PIManalyzer:MEASure ON').then(data => {\n      return connectMachine(':PIManalyzer:MEASure:VALue?');\n    }).then(data => {\n      this.formatFinalData(qrcode, data, power, duration);\n      elem.disabled = false;\n      elem.value = '';\n      elem.focus();\n    });\n  }\n\n  formatFinalData(qrcode, peakData, power, duration) {\n    // TODO: check this String method requirement.\n    var [dBm, dBc] = this.formatPeakData(String(peakData));\n    var timestamp = this.formatDate();\n    var currentData = {\n      qrcode,\n      power,\n      duration,\n      dBm,\n      dBc,\n      timestamp\n    };\n    this.setState(prevState => ({\n      newData: currentData\n    }));\n  }\n\n  formatPeakData(data) {\n    var arr = data.split(',');\n    arr[0] = ' ' + arr[0] + ' dBc';\n    arr[1] = arr[1] + ' dBm';\n    arr.reverse();\n    var final = arr.join();\n    return final;\n  }\n\n  formatDate() {\n    var dt = new Date();\n    return `${dt.getHours().toString().padStart(2, '0')}:${dt.getMinutes().toString().padStart(2, '0')}:${dt.getSeconds().toString().padStart(2, '0')}`;\n  }\n\n  savePower(evt) {\n    if (evt) {\n      if (evt.target.value < 20) evt.target.value = 20;\n      if (evt.target.value > 46) evt.target.value = 46;\n      localStorage.setItem('power', evt.target.value);\n    } else {\n      var power = 43;\n\n      try {\n        var local = JSON.parse(localStorage.getItem('power'));\n        if (local) power = local;\n      } catch (e) {\n        console.log(e);\n      } finally {\n        document.getElementById('outputPowerLevel').value = power;\n        localStorage.setItem('power', power);\n      }\n    }\n  }\n\n  saveDuration(evt) {\n    if (evt) {\n      if (evt.target.value < 1) evt.target.value = 1;\n      if (evt.target.value > 600) evt.target.value = 600;\n      localStorage.setItem('duration', evt.target.value);\n    } else {\n      var duration = 30;\n\n      try {\n        var local = JSON.parse(localStorage.getItem('duration'));\n        if (local) duration = local;\n      } catch (e) {\n        console.log(e);\n      } finally {\n        document.getElementById('testDuration').value = duration;\n        localStorage.setItem('duration', duration);\n      }\n    }\n  }\n\n  componentDidMount() {\n    // TODO: try to use these methods from PIM class file\n    this.savePower();\n    this.saveDuration();\n  }\n\n}\n\nexport default Autotest;","map":{"version":3,"sources":["C:/Users/amnaonoip/Desktop/anritsu-cable-scanner/src/components/Autotest.js"],"names":["React","AutotestTable","connectMachine","Autotest","Component","constructor","props","state","newData","render","savePower","saveDuration","waitForQRCode","bind","clearTimeout","debounceTimer","setTimeout","_","sendCommandToDevice","elem","document","getElementById","qrcode","value","disabled","power","duration","then","data","formatFinalData","focus","peakData","dBm","dBc","formatPeakData","String","timestamp","formatDate","currentData","setState","prevState","arr","split","reverse","final","join","dt","Date","getHours","toString","padStart","getMinutes","getSeconds","evt","target","localStorage","setItem","local","JSON","parse","getItem","e","console","log","componentDidMount"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport AutotestTable from './AutotestTable';\r\nimport connectMachine from '../service';\r\n\r\nclass Autotest extends React.Component {\r\n    debounceTimer;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newData: {}\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (<main id=\"autotest\">\r\n            <label>Output Power Level (dBm): <input type=\"number\" id=\"outputPowerLevel\" onInput={this.savePower} disabled={true}/></label>\r\n            <label>Test Duration (sec): <input type=\"number\" id=\"testDuration\" onInput={this.saveDuration}  disabled={true}/></label>\r\n            <br />\r\n            <input type=\"text\" id=\"scanner\" placeholder=\"Place scanner here\" onInput={this.waitForQRCode.bind(this)} className=\"backgroundAnimated\" autoComplete=\"off\" />\r\n            <AutotestTable addon={this.state.newData} />\r\n            <br />\r\n        </main>);\r\n    }\r\n\r\n    waitForQRCode() {\r\n        clearTimeout(this.debounceTimer);\r\n        this.debounceTimer = setTimeout( _ => {\r\n            this.sendCommandToDevice();\r\n        }, 500);\r\n    }\r\n\r\n    sendCommandToDevice() {\r\n        var elem = document.getElementById('scanner');\r\n        var qrcode = elem.value;\r\n        if(!qrcode) return;\r\n        elem.disabled = true;\r\n\r\n        var power = document.getElementById('outputPowerLevel').value;\r\n        var duration = document.getElementById('testDuration').value;\r\n\r\n        connectMachine('INITiate:PIManalyzer:MEASure ON')\r\n        .then( data => {\r\n            return connectMachine(':PIManalyzer:MEASure:VALue?');\r\n        })\r\n        .then( data => {\r\n            this.formatFinalData(qrcode, data, power, duration);\r\n            elem.disabled = false;\r\n            elem.value = '';\r\n            elem.focus();\r\n        });\r\n    }\r\n\r\n    formatFinalData(qrcode, peakData, power, duration) {\r\n        // TODO: check this String method requirement.\r\n        var [dBm, dBc] = this.formatPeakData(String(peakData));\r\n        var timestamp = this.formatDate();\r\n\r\n        var currentData = { qrcode, power, duration, dBm, dBc, timestamp };\r\n\r\n        this.setState(prevState => ({\r\n            newData: currentData\r\n        }));\r\n    }\r\n\r\n    formatPeakData(data) {\r\n        var arr = data.split(',');\r\n        arr[0] = ' ' + arr[0] + ' dBc';\r\n        arr[1] = arr[1] + ' dBm';\r\n        arr.reverse();\r\n        var final = arr.join();\r\n        return final;\r\n    }\r\n\r\n    formatDate() {\r\n        var dt = new Date();\r\n        return (`${dt.getHours().toString().padStart(2, '0')}:${dt.getMinutes().toString().padStart(2, '0')}:${dt.getSeconds().toString().padStart(2, '0')}`);\r\n    }\r\n\r\n    savePower(evt) {\r\n        if(evt) {\r\n            if(evt.target.value < 20) evt.target.value = 20;\r\n            if(evt.target.value > 46) evt.target.value = 46;\r\n            localStorage.setItem('power', evt.target.value);\r\n        } else {\r\n            var power = 43;\r\n            try {\r\n                var local = JSON.parse(localStorage.getItem('power'));\r\n                if(local) power = local;\r\n            } catch (e) {\r\n                console.log(e);\r\n            } finally {\r\n                document.getElementById('outputPowerLevel').value = power;\r\n                localStorage.setItem('power', power);\r\n            }\r\n        }\r\n    }\r\n\r\n    saveDuration(evt) {\r\n        if(evt) {\r\n            if(evt.target.value < 1) evt.target.value = 1;\r\n            if(evt.target.value > 600) evt.target.value = 600;\r\n            localStorage.setItem('duration', evt.target.value);\r\n        } else {\r\n            var duration = 30;\r\n            try {\r\n                var local = JSON.parse(localStorage.getItem('duration'));\r\n                if(local) duration = local;\r\n            } catch (e) {\r\n                console.log(e);\r\n            } finally {\r\n                document.getElementById('testDuration').value = duration;\r\n                localStorage.setItem('duration', duration);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // TODO: try to use these methods from PIM class file\r\n        this.savePower();\r\n        this.saveDuration();\r\n    }\r\n\r\n}\r\n\r\nexport default Autotest;\r\n"]},"metadata":{},"sourceType":"module"}